pip install -r requirements.txt
#를 하여 requirements.txt에 적힌 것을 다운받는다.

pip freeze > requirements.txt 
#내가 설치한 라이브러리 requirements.txt에 올려 놓는다. (이 명령어를 실행하면 requirements.txt 를 만들 수 있다)



ls -Recurse 
# 현재 경로의 하위 파일들 읽기

win + x 
#터미널 실행 단축키
 Get-ChildItem -Path "Program Files (x86)" -Recurse | Where-Object {$_.FullName -like '*kakaotalk'}
# 하위 경로의 파일 검색하기 여기서는 예시로 카카오 검색
#관리자 권한으로 실행해야함
#like 연산자 사용해서 검색하는 거임

conda activate <env-name>
#가상환경 실행
conda deactivate
#가상환경 비활성화
conda info --envs
#가상환경 정보들
conda remove --name <가상환경이름> --all
#가상환경 제거  -all 옵션을 사용하여 모두 제거

ls
#현재 경로의 폴더 보기

powershell의 실행정책은 실행 가능한 파일을 실행할 수 있는 규칙을 정의하는 보안 기능
unrestricted 실행 정책은 실행 제한을 완전히 해제함,즉 아무거나 막 설치 할 수 있게됨
set-excvutionpolicy는 실행정책을 설정하라는 의미

#노트북에서 환경설정을 하는 과정에서 가상환경이 제대로 설정이 안되는 문제가 발생했다
#그 이유는 ondrive의 경로에서 깨진 폴더?가 있기 때문이었다(왜 깨졌는지는 모르겠다)
#그래서 깨진 경로의 프로파일을 내용을 복사하여 새롭게 만든 프로파일에 넣어줬다


#conda init powershell 
 파워쉘에서 conda를 사요할 수 있또록 초기화 하는 명령어 

#test-path $profile 명령어를 실행하면 $profile 변수에 지정된 경로에 프로필 파일이 있는지 여부를 확인할 수 있습니다. 명령어 실행 결과가 True라면 프로필 파일이 존재하는 것이고, False라면 프로필 파일이 존재하지 않는 것입니다.

PowerShell 프로필 파일은 PowerShell 세션이 시작될 때 자동으로 로드되는 스크립트 파일입니다. 이 파일은 사용자 정의 설정, 함수, 별칭 등을 정의하여 PowerShell 세션을 맞춤 설정하는 데 사용됩니다.

# 경로가 옳게 됐는지 확인하는 명령어

#new-item -path $profile -itemtype file -force
-new-item: 새로운 아이템을 생성하는 PowerShell cmdlet입니다.
-path $profile: $profile 변수에 저장된 PowerShell 프로필 파일 경로를 지정합니다. $profile 변수는 현재 사용자의 PowerShell 프로필 파일 경로를 가리키는 변수입니다.
-itemtype file: 새로운 아이템의 유형을 지정합니다. 이 경우, 파일을 생성하도록 지정되어 있습니다.
-force: 필요한 경우, 이미 해당 경로에 파일이 존재하더라도 강제로 생성하도록 지정합니다.

#프로파일은 powershell이 시작됐을 때 자동으로 로드되는 스크립트 파일
