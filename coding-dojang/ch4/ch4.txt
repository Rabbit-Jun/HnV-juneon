많은 프로그래밍 언어들은 구문이 끝날 때 ;(세미콜론)을 붙여야 합니다. 하지만 파이썬은 세미콜론을 붙이지 않습니다.
단, 세미콜론을 붙여도 문법 에러는 발생하지 않습니다. 보통 한 줄에 여러 구문을 사용할 때 세미콜론으로 구분해줍니다.

파이썬에서 사람만 알아볼 수 있도록 작성하는 부분을 주석(comment)라고 합니다. 즉, 주석은 파이썬 인터프리터가 처리하지 않으므로 프로그램의 실행에는 영향을 주지 않습니다.
#은 한줄 주석으로 코드 뒤에도 입력 가능

파이썬 3에서는 .py 스크립트 파일의 기본 인코딩이 UTF-8입니다. 스크립트 파일을 다른 인코딩(CP949, EUC-KR)으로 저장하면 실행을 했을 때 에러가 발생합니다.

vscode에서는 파일(F) -> 기본 설정(P) -> 설정(S)을 선택한 후, 검색 창에 files.encoding을 입력하여 파일 인코딩 설정을 검색합니다.

들여쓰기는 코드를 읽기 쉽도록 일정한 간격을 띄워서 작성하는 방법입니다. 특히 파이썬은 들여쓰기 자체가 문법입니다.
잘못된 예시)
if a == 10:
print('10입니다.')    # 들여쓰기 문법 에러
실행 결과
IndentationError: expected an indented block

올바른 예시)
if a == 10:
     print('10입니다.')

tab 누르면 들여쓰기 됨

코드 블록은 특정한 동작을 위해서 코드가 모여 있는 상태를 뜻하며 파이썬은 들여쓰기를 기준으로 코드 블록을 구성합니다.
단, 같은 블록은 들여쓰기 칸 수가 같아야 하고, 공백과 탭 문자를 섞어 쓰면 안 됩니다.
예시)
if a == 10:
      print('10')
      print('입니다.')

Q.컴퓨테이셔널 씽킹과 알고리즘의 차이점은 무엇인가요?

A.컴퓨테이셔널 씽킹은 4가지로 되어 있습니다.

분해: 복잡한 문제를 작은 문제로 나눕니다.
패턴 인식: 문제 안에서 유사성을 발견합니다.
추상화: 문제의 핵심에만 집중하고, 부차적인 것은 제외합니다.
알고리즘: 이렇게 정의한 문제를 해결하는 절차입니다(일반화와 모델링은 여기에 포함됩니다).

즉, 비정형화 된 문제를 정형화 하여 푸는 모든 과정을 컴퓨테이셔널 씽킹이라 하고 그 과정에 알고리즘이 포함되는 듯

